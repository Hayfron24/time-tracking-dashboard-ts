// Generated by https://quicktype.io

interface Data {
    title: string;
    timeframes: Timeframes;
}

interface Timeframes {
    daily: Daily;
    weekly: Weekly;
    monthly: Monthly;
}

interface Daily {
    current: number;
    previous: number;
}

interface Weekly {
    current: number;
    previous: number;
}

interface Monthly {
    current: number;
    previous: number;
}

const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll('.btn');

buttons.forEach(button =>{
  button.addEventListener('click', () =>{
    buttons.forEach(b =>{
      b.classList.remove('active');
    });
    button.classList.add('active');
  });
});

const url: string = 'data.json';

fetch(url)
  .then(response => {
    // Check if the response status is in the range 200-299 (success)
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }
    // Parse the JSON in the response
    return response.json();
  })
  .then((data: Data )=> {
    // let conData = data;

    const newData = Object.values(data);

    const cards = document.querySelectorAll('.cards');
    const elementsArray = Array.from(cards);

    let dailyData = '';

    const daily = newData.map(elements =>{
      const elementsModifiedArray = elementsArray.map((element) => {
        // Do something with each element
        element.innerHTML += ` <div class="card">
                <div class="inner-card">
                    <div class="status">
                        <p>${elements.title}</p>
                        <i class="fa fa-ellipsis-h" aria-hidden="true"></i>
                    </div>
                    <div class="time">
                        <h2>${elements.timeframes.daily.current}hrs</h2>
                        <p>Last Week - ${elements.timeframes.daily.previous}hrs</p>
                    </div>
                </div>
            </div>`
        console.log( elements.title );
        // console.log(`Element at index :`, element.innerHTML += `<h1>nice</h1>`);
        return element; // You can modify the element or create a new array with modifications
      });
      console.log( elementsModifiedArray);
     
     
      console.log( elements.timeframes.daily);
      console.log( elements.timeframes.weekly );
    })
    

    console.log(newData ,typeof(newData));
    // console.log(conData ,typeof(conData));
    
  })
  .catch(error => {
    // Handle errors during the fetch or JSON parsing
    console.error('Fetch error:', error);
  });


// const text: HTMLCollectionBase = document.querySelectorAll('h1');

// const newText: Element[] = Array.from(text);

// newText.forEach(element => {
//   element.innerHTML = '<h1>' + element.innerHTML + '</h1>';
// });

// console.log(text);
// const elements = document.querySelectorAll('.inner-card');
// const elementsArray = Array.from(elements);


// Using .map
// const elementsModifiedArray = elementsArray.map((element) => {
//   // Do something with each element
//   // console.log(`Element at index :`, element.innerHTML += `<h1>nice</h1>`);
//   return element; // You can modify the element or create a new array with modifications
// });
